package com.k00ntz.euler;

import com.k00ntz.euler.util.Primes;

import java.util.HashSet;

import static java.lang.Math.ceil;
import static java.lang.Math.floor;

/**
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 * <p>
 * Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
 * Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
 * Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
 * It can be verified that T285 = P165 = H143 = 40755.
 * <p>
 * Find the next triangle number that is also pentagonal and hexagonal.
 * <p>
 * 1/2 a^2 + 1/2 a
 * 3/2 b^2 - 1/2 b
 * 2   c^2 - c
 */
public class TriangularPentagonalHexagonal45 {


    public static long triangle(int n) {
        return n * (n + 1) / 2;
    }

    public static long pentagonal(int n) {
        return n * (3 * n - 1) / 2;
    }

    public static long hexagonal(int n) {
        return n * (2 * n - 1);
    }

    public static int isTriangle(int t) {
        double sqrt = Math.sqrt(t * 2);
        if (t * 2.0 == floor(sqrt) * ceil(sqrt))
            return (int) floor(sqrt);
        else return -1;
    }

    public static int isHexagonal(int h) {
        HashSet<Integer> divisors = new HashSet<>(Primes.divisors(h));
        return divisors.stream().mapToInt(x -> x).findFirst(d -> divisors.contains((2 * d) - 1)).orElse(-1);
    }

    public static long findIntersectionsAfter(int triN, int pentN, int hexN) {

    }

    public static void main(String[] args) {
        System.out.println(isTriangle(3));
        System.out.println(isTriangle(4));
        System.out.println(isTriangle(5));
        System.out.println(isTriangle(6));
        System.out.println(findIntersectionsAfter(286, 165, 143));
    }
}
